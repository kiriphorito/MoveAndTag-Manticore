#!/usr/bin/python
# -*- coding: utf-8 -*-
u"""
@brief: Path Planning Sample Code with Randamized Rapidly-Exploring Random Trees (RRT) 

@author: AtsushiSakai

@license: MIT

"""

import shapely
from shapely.geometry import Polygon, LineString, Point
import matplotlib.pyplot as plt
from ast import literal_eval

import random
import math
import copy

def drawPolygonNoFill(points,color):
    polygon = plt.Polygon(points,color=color,fill=False)
    plt.gca().add_patch(polygon)

def drawPolygon(points):
    polygon = plt.Polygon(points)
    plt.gca().add_patch(polygon)

def drawPolygons(polygons):
    try:
        for xs in polygons:
            drawPolygon(xs)
    except ValueError:
        print ("no polygons specified")

def drawPolygonNoFill(points,color):
    polygon = plt.Polygon(points,color=color,fill=False)
    plt.gca().add_patch(polygon)

def drawPolygonsNoFill(polygons):
    try:
        for xs in polygons:
            drawPolygonNoFill(xs,'red')
    except ValueError:
        print ("no polygons specified")



class RRT():
    u"""
    Class for RRT Planning
    """
    
    def __init__(self, start, goal, obstacleList,randArea,expandDis=1.0,goalSampleRate=5,maxIter=500):
        
        self.start=Node(start[0],start[1])
        self.end=Node(goal[0],goal[1])
        self.minrand = randArea[0]
        self.maxrand = randArea[1]
        self.expandDis = expandDis
        self.goalSampleRate = goalSampleRate
        self.maxIter = maxIter
    
    def Planning(self,animation=True):
        u"""
        Pathplanning 

        animation: flag for animation on or off
        """

        self.nodeList = [self.start]
        while True:
            # Random Sampling
            if random.randint(0, 100) > self.goalSampleRate:
                rnd = [random.uniform(self.minrand, self.maxrand), random.uniform(self.minrand, self.maxrand)]
            else:
                rnd = [self.end.x, self.end.y]

            # Find nearest node
            nind = self.GetNearestListIndex(self.nodeList, rnd)
            # print(nind)

            # expand tree
            nearestNode =self.nodeList[nind]
            theta = math.atan2(rnd[1] - nearestNode.y, rnd[0] - nearestNode.x)

            newNode = copy.deepcopy(nearestNode)
            newNode.x += self.expandDis * math.cos(theta)
            newNode.y += self.expandDis * math.sin(theta)
            newNode.parent = nind

            if not self.__CollisionCheck(newNode, obstacleList,nearestNode):
                continue

            self.nodeList.append(newNode)

            # check goal
            dx = newNode.x - self.end.x
            dy = newNode.y - self.end.y
            d = math.sqrt(dx * dx + dy * dy)
            if d <= self.expandDis:
                print("Goal!!")
                break

            if animation:
                self.DrawGraph(rnd)

            
        path=[[self.end.x,self.end.y]]
        lastIndex = len(self.nodeList) - 1
        while self.nodeList[lastIndex].parent is not None:
            node = self.nodeList[lastIndex]
            path.append([node.x,node.y])
            lastIndex = node.parent
        path.append([self.start.x, self.start.y])

        return path

    def DrawGraph(self,rnd=None):
        u"""
        Draw Graph
        """
        import matplotlib.pyplot as plt
        plt.clf()
        if rnd is not None:
            plt.plot(rnd[0], rnd[1], "^k")
        for node in self.nodeList:
            if node.parent is not None:
                plt.plot([node.x, self.nodeList[node.parent].x], [node.y, self.nodeList[node.parent].y], "-g")
#        plt.plot([ox for (ox,oy,size) in obstacleList],[oy for (ox,oy,size) in obstacleList], "ok", ms=size * 20)
        drawPolygons(obstacleList)
        plt.plot(self.start.x, self.start.y, "xr")
        plt.plot(self.end.x, self.end.y, "xr")
        plt.axis()
        plt.grid(True)
        plt.pause(0.01)

    def GetNearestListIndex(self, nodeList, rnd):
        dlist = [(node.x - rnd[0]) ** 2 + (node.y - rnd[1]) ** 2 for node in nodeList]
        minind = dlist.index(min(dlist))
        return minind

    def __CollisionCheck(self, node,obstacleList,nearestNode):
        p2 = LineString([(nearestNode.x,nearestNode.y),(node.x,node.y)])
        for poly in obstacleList:
            p1 = Polygon(poly)
            if p1.intersects(p2):
#                print "collision"
                return False
#        print "safe"
        return True

def LineCollisionCheck(first,second, obstacleList):
    x1 = first[0]
    y1 = first[1]
    x2 = second[0]
    y2 = second[1]

    try:
        a=y2-y1
        b=-(x2-x1)
        c=y2*(x2-x1)-x2*(y2-y1)
    except ZeroDivisionError:
        return False

    p2 = LineString([(x1,y1),(x2,y2)])
    for poly in obstacleList:
        p1 = Polygon(poly)
        if p1.intersects(p2):
#            print "collision"
            return False
#    print "safe"
    return True

def supersmoothie(smoothie,obstacleList):
    path = smoothie
    state = True
    counter1 = 0
    counter2 = len(path)-1
    while state:
        counter2 = len(path)-1
        if counter1 == counter2:
            state = False
            break
        coord1 = path[counter1]
        for counter in range(counter2,0,-1):
            coord2 = path[counter]
            if LineCollisionCheck(coord1,coord2,obstacleList): #if no obstacle
                del path[(counter1+1):(counter)]
                break
        counter1 += 1
    return path

class Node():
    u"""
    RRT Node
    """

    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.parent = None


def rrtpath(obstacles,startcoord,goalcoord,randAreas):
    rrt = RRT(start=startcoord, goal=goalcoord,randArea = randAreas, obstacleList=obstacles)
    path= rrt.Planning(animation=True)
#    rrt.DrawGaph()
    plt.plot([x for (x,y) in path], [y for (x,y) in path],'-r')
#    print path
    smoothiePath = supersmoothie(path,obstacles)
    plt.plot([x for (x,y) in smoothiePath], [y for (x,y) in smoothiePath],'-y')
    print smoothiePath
    return smoothiePath

#obstacleList = [[(1,2),(1,4),(3,4),(3,2)],[(8,1),(4,1),(4,4),(5,2)]]
#start = (0,0)
#goal = (5,10)
#rand = (-2,15)

obstacleList = [[(-0.15905446737960563,-0.05353209579044509),(0.5463358334106622,0.6552870091658305),(1.2551549383669378,-0.05010329162443683),(-0.15562566321359764,-1.4677415015369886),(-8.661454922688906,6.996942107946224),(-10.072235524269441,5.579303898033672),(-9.363416419313165,4.873913597243407),(-10.7741970208937,3.4562753873308565),(-12.900654335762528,5.572446289701656),(-4.435970726279312,14.078275549176965),(-5.853608936191864,15.4890561507575),(-9.380560440143206,11.944960625976123),(-34.189229113612846,36.633621153635495),(-37.71618061756419,33.08952562885412),(-12.907511944094542,8.400865101194746),(-14.31829254567508,6.983226891282191),(-15.735930755587628,8.39400749286273),(-16.441321056377895,7.685188387906453),(-12.897225531596519,4.158236883955117),(-14.308006133177054,2.740598674042562),(-13.599187028220781,2.0352083732522974),(-12.188406426640242,3.452846583164851),(-11.479587321683969,2.747456282374583),(-15.006538825635308,-0.7966392424067942),(-16.424177035547856,0.6141413591737382),(-17.129567336338123,-0.0946777457825346),(-15.711929126425574,-1.5054583473630743),(-19.23888063037691,-5.049553872144453),(-17.821242420464362,-6.460334473724982),(-7.945778209400613,3.4631329956628685),(-7.236959104444338,2.757742694872601),(-15.701642713927551,-5.748086564602703),(-14.284004504015002,-7.158867166183237),(-5.819320894531787,1.346962093292069),(-5.110501789575511,0.641571792501801),(-7.932062992736582,-2.193704627323304),(-6.514424782824032,-3.604485228903836),(-5.103644181243496,-2.1868470189912856),(-3.686005971330945,-3.5976276205718216),(-2.9806156705406774,-2.8888085156155463),(-4.398253880453228,-1.4780279140350105),(-3.69286357966296,-0.7692088090787357),(-1.566406264794133,-2.8853797114495396),(-4.387967467955202,-5.720656131274644),(-3.679148362998927,-6.42604643206491),(-2.97375806220866,-5.717227327108635),(-2.2649389572523844,-6.4226176278989024),(-3.675719558832919,-7.840255837811453),(-7.928634188570574,-3.607914033069844),(-8.634024489360844,-4.3167331380261205),(-4.381109859623187,-8.549074942767728),(-5.0865001604134585,-9.257894047724003),(-7.921776580238559,-6.436332844562933),(-8.627166881028828,-7.145151949519209),(-7.20952867111628,-8.55593255109974),(-10.736480175067623,-12.100028075881117),(-12.86293748993644,-9.983857173510316),(-13.56832779072671,-10.692676278466593),(-11.441870475857886,-12.808847180837395),(-12.147260776648153,-13.51766628579367),(-11.438441671691884,-14.223056586583935),(-10.733051370901608,-13.514237481627665),(-7.188955846120231,-17.041188985579),(-6.483565545329968,-16.33236988062272),(-10.027661070111344,-12.805418376671383),(-6.50070956616,-9.261322851890013),(-5.791890461203727,-9.966713152680276),(-6.497280761993989,-10.675532257636556),(-5.788461657037715,-11.380922558426823),(-1.556119852296113,-7.128007928689169),(-0.8473007473398351,-7.833398229479437),(-2.258081348920372,-9.251036439391987),(-1.5492622439640942,-9.956426740182255),(-0.13848164238355762,-8.538788530269704),(0.5703374625727168,-9.24417883105997),(1.2757277633629862,-8.535359726103696),(-2.2683677614183924,-5.008408222152359),(-1.5629774606281248,-4.299589117196083),(1.9811180641532558,-7.826540621147421),(2.686508364943521,-7.117721516191146),(-0.8575871598378593,-3.590770012239807),(-0.15219685904758962,-2.881950907283532),(5.5183559806026174,-8.52507331360567),(6.929136582183151,-7.107435103693122),(3.385041057401773,-3.5804835997417834),(4.090431358192039,-2.871664494785509),(6.2168886730608675,-4.987835397156309),(6.922278973851135,-4.279016292200035),(4.795821658982308,-2.162845389829232),(5.501211959772576,-1.4540262848729573),(8.336488379597677,-4.275587488034028),(9.041878680387944,-3.5667683830777506),(6.206602260562843,-0.7452071799166825),(6.911992561353111,-0.03638807496040379),(6.203173456396835,0.6690022258298652),(2.676221952445497,-2.8750932989515157),(1.2585837425329456,-1.4643126973709804),(1.9639740433232131,-0.7554935924147048),(2.672793148279489,-1.4608838932049728),(3.3781834490697564,-0.7520647882486958),(2.6693643441134816,-0.046674487458428573),(5.490925547274552,2.788601932366675),(9.03502107205593,-0.738349571584664),(9.740411372846197,-0.029530466628387268),(9.03159226788992,0.675859834161879),(9.736982568680189,1.384678939118157),(14.698716303374118,-3.5530531664137235),(15.404106604164385,-2.844234061457442),(10.442372869470457,2.093498044074429),(11.147763170260724,2.8023171490307086),(24.615326164429963,-10.60009856598438),(23.204545562849432,-12.017736775896928),(18.951630933111772,-7.7853949711553305),(18.246240632321506,-8.494214076111604),(22.499155262059162,-12.726555880853208),(21.7937649612689,-13.435374985809476),(16.123212121618685,-7.792252579487346),(15.417821820828419,-8.501071684443614),(21.08837466047862,-14.144194090765764),(19.677594058898094,-15.561832300678308),(14.00704121924788,-9.918709894356173),(12.596260617667348,-11.336348104268719),(13.305079722623628,-12.04173840505898),(11.89429912104308,-13.459376614971545),(12.603118225999353,-14.164766915761813),(14.013898827579895,-12.747128705849256),(14.72271793253617,-13.452519006639527),(7.668814924633494,-20.54071005620228),(3.415900294895844,-16.308368251460674),(2.7105099941055784,-17.017187356416947),(6.96342462384323,-21.249529161158556),(6.258034323052952,-21.958348266114832),(7.675672532965514,-23.369128867695366),(6.264891931384977,-24.78676707760792),(6.973711036341253,-25.492157378398183),(8.384491637921784,-24.074519168485633),(9.09331074287805,-24.779909469275903),(17.557994352361273,-16.274080209800598),(18.266813457317543,-16.979470510590872),(10.507520148624607,-24.776480665109894),(14.051615673405987,-28.30343216906123),(28.15942168921134,-14.127050069935722),(38.0828891585992,-24.002514280999463),(-4.240528888816881,-66.531660578376),(-0.6964333640355223,-70.05861208232734),(-4.928775168777117,-74.311526712065),(-4.219956063820833,-75.01691701285526),(0.012385740920794447,-70.76400238311761),(6.391757685527274,-77.11251509023002),(48.71517573294334,-34.583368792853484),(50.84163304781216,-36.69953969522429),(51.54702334860244,-35.990720590268005),(58.63521439816518,-43.04462359817069),(60.04599499974573,-41.62698538825812),(52.957803950182964,-34.57308238035545),(55.77936515334401,-31.73780596053038),(16.085495275792596,7.764050883724641),(18.90705647895367,10.599327303549739),(17.489418269041117,12.010107905130274),(16.078637667460587,10.592469695217721),(-8.730031006009064,35.28113022287709),(-13.667763111540934,30.319396488183166),(11.140905561928708,5.630735960523794),(7.613954057977368,2.0866404357424178),(6.1963158480648195,3.4974210373229493),(6.901706148855087,4.206240142279225),(6.1928870438988115,4.911630443069491),(1.9605452391572056,0.6587158133318389),(1.2517261342009298,1.364106114122106),(1.9571164349911976,2.0729252190783813),(1.248297330034922,2.7783155198686496),(4.775248833986261,6.322411044650026),(4.066429729029986,7.027801345440294),(3.361039428239718,6.318982240484019),(-0.8918752014979333,10.551324045225627),(0.5189054000826002,11.968962255138177),(-0.18991370487367354,12.674352555928445),(-1.6006943064542123,11.256714346015894),(-2.309513411410486,11.96210464680616),(-3.72029401299102,10.544466436893613),(1.9502588266591825,4.901344030571467),(0.5394782250786468,3.483705820658917),(-0.16934087987762828,4.189096121449184),(-0.8747311806678966,3.480277016492909),(-5.127645810405549,7.712618821234516),(-5.833036111195818,7.00379971627824),(-1.5801214814581643,2.771457911536634),(-2.285511782248432,2.0626388065803587)],[(-29.161049499330176,-2.4078974567351206),(-31.085495024760096,-4.709312112909181),(-30.31835680603543,-5.350793954719155),(-35.45021154051526,-11.487899704516607),(-34.68307332179059,-12.129381546326572),(-34.0415914799806,-11.362243327601892),(-33.274453261255886,-12.00372516941188),(-35.198898786685824,-14.305139825585947),(-37.5003134428599,-12.38069430015598),(-38.14179528466987,-13.147832518880657),(-37.37465706594517,-13.789314360690657),(-39.94058443318513,-16.857867235589357),(-45.31055196425788,-12.367494342919525),(-45.95203380606782,-13.13463256164424),(-40.582066274995086,-17.625005454314017),(-41.22354811680503,-18.392143673038788),(-40.45640989808033,-19.033625514848783),(-36.6075188472205,-14.430796202500623),(-35.84038062849583,-15.072278044310607),(-36.48186247030577,-15.839416263035309),(-35.71472425158112,-16.480898104845288),(-32.50731504253124,-12.645207011221858),(-30.973038605081854,-13.928170694841812),(-30.331556763271863,-13.161032476117127),(-33.40010963817059,-10.595105108877222),(-32.75862779636065,-9.827966890152528),(-22.018692734215076,-18.80871267549225),(-20.73572905059513,-17.27443623804286),(-31.475664112740674,-8.29369045270317),(-30.834182270930707,-7.5265522339784905),(-26.23135295858261,-11.37544328483836),(-25.589871116772628,-10.608305066113678),(-30.19270042912071,-6.759414015253814),(-29.551218587310743,-5.992275796529118),(-28.78408036858608,-6.6337576383391),(-28.142598526776066,-5.866619419614415),(-25.841183870602034,-7.791064945044361),(-25.199702028792057,-7.02392672631966),(-27.5011166849661,-5.099481200889733),(-26.85963484315613,-4.332342982165058),(-27.62677306188082,-3.690861140355076),(-26.34380937826086,-2.1565847029057),(-23.275256503362133,-4.7225120701456165),(-21.992292819742175,-3.188235632696238),(-23.526569257191536,-1.9052719490762882),(-22.885087415381555,-1.1381337303516204),(-19.816534540482834,-3.7040610975915373),(-19.17505269867285,-2.9369228788668797),(-20.709329136122214,-1.6539591952469017),(-18.78488361069229,0.6474554609271888),(-19.552021829416965,1.2889373027371613),(-21.476467354846907,-1.0124773534368952),(-22.243605573571585,-0.37099551162692235),(-21.60212373176161,0.3961427070977521),(-22.369261950486298,1.0376245489077554),(-24.293707475916214,-1.2637901072663245),(-25.060845694640914,-0.6223082654563188),(-22.49491832740099,2.4462446094423718),(-23.262056546125667,3.0877264512523506),(-23.903538387935633,2.320588232527672),(-28.506367700283764,6.16947928338756),(-29.14784954209373,5.402341064662847),(-24.545020229745642,1.5534500138030038),(-25.186502071555616,0.7863117950783329),(-31.32360782135307,5.91816652955813),(-32.60657150497305,4.383890092108764),(-37.97653903604585,8.87426298477858),(-38.618020877855784,8.10712476605393),(-33.24805334678301,3.6167518733840756),(-33.88953518859298,2.8496136546594077),(-27.752429438795517,-2.2822410798204107),(-28.393911280605494,-3.0493792985451007)],[(26.37808424412794,5.20880839777555),(25.796512775204906,6.022303712165678),(27.423503403985144,7.185446650011763),(26.841931935062117,7.998941964401892),(25.214941306281858,6.835799026555805),(24.633369837358817,7.64929434094595),(23.819874522968686,7.067722872022894),(23.23830305404564,7.881218186413019),(30.559760883556773,13.11536140672042),(28.81504647678766,15.555847349890797),(21.493588647276507,10.321704129583392),(20.912017178353487,11.13519944397352),(20.098521863963352,10.553627975050503),(23.006379208578565,6.486151403099868),(22.192883894188434,5.904579934176832),(23.937598300957546,3.4640939910064272),(24.751093615347685,4.045665459929475),(27.658950959962894,-0.02181111202117858),(28.47244627435302,0.5597603569018563),(27.890874805429966,1.3732556712919854),(34.398837320551,6.025827422676361),(33.817265851627965,6.839322737066494),(27.309303336506932,2.186750985682121),(25.564588929737816,4.627236928852509)],[(-38.644054444039085,-33.65509019071267),(-38.3160626336264,-34.59977075699007),(-40.205423766181205,-35.255754377815464),(-40.861407387006594,-33.366393245260646),(-41.806087953284006,-33.69438505567335),(-41.1501043324586,-35.583746188228176),(-42.094784898736016,-35.91173799864086),(-41.76679308832333,-36.85641856491826),(-37.988070823213725,-35.54445132326748),(-37.660079012801035,-36.4891318895449),(-36.71539844652361,-36.16114007913222),(-36.387406636110924,-37.10582064540962),(-41.11080946749792,-38.74577969747308),(-40.78281765708528,-39.69046026375047),(-39.8381370908079,-39.36246845333777),(-39.18215346998251,-41.25182958589261),(-41.07151460253732,-41.90781320671799),(-41.72749822336263,-40.01845207416318),(-42.67217878964007,-40.34644388457585),(-42.01619516881468,-42.235805017130666),(-42.960875735092074,-42.563796827543385),(-45.584810218393635,-35.0063522973241),(-47.47417135094845,-35.662335918149495),(-47.146179540535734,-36.60701648442693),(-49.03554067309057,-37.263000105252296),(-49.69152429391595,-35.373638972697506),(-46.85748259508374,-34.389663541459456),(-47.18547440549643,-33.44498297518198),(-48.13015497177382,-33.772974785594734),(-50.75408945507542,-26.215530255375477),(-51.698770021352814,-26.543522065788146),(-49.07483553805123,-34.10096659600744),(-50.01951610432865,-34.42895840642016),(-50.34750791474135,-33.48427784014267),(-51.29218848101875,-33.81226965055537),(-49.980221239367964,-37.59099191566502),(-50.924901805645376,-37.918983726077705),(-50.26891818482004,-39.808344858632495),(-46.49019591971035,-38.49637761698176),(-45.50622048847231,-41.330419315813934),(-47.39558162102709,-41.98640293663935),(-47.06758981061442,-42.931083502916735),(-45.1782286780596,-42.27509988209137),(-44.85023686764692,-43.21978044836875),(-45.79491743392431,-43.54777225878145),(-45.46692562351162,-44.492452825058855),(-44.52224505723425,-44.16446101464614),(-38.61839246980588,-61.16871120763949),(-35.784350770973674,-60.18473577640148),(-41.68820335840203,-43.180485583408114),(-38.8541616595698,-42.19651015217),(-38.19817803874437,-44.085871284724824),(-37.253497472467,-43.75787947431215),(-38.893456524530464,-39.03447664292509),(-37.94877595825303,-38.706484832512416),(-36.96480052701498,-41.540526531344604),(-36.0201199607376,-41.21253472093192),(-37.004095391975625,-38.37849302209972),(-36.05941482569825,-38.05050121168704),(-35.73142301528557,-38.99518177796445),(-34.78674244900814,-38.667189967551764),(-35.114734259420814,-37.72250940127434),(-34.17005369314343,-37.39451759086167),(-31.54611920984196,-44.95196212108099),(-29.65675807728708,-44.295978500255565),(-32.28069256058861,-36.738533970036315),(-31.336011994311193,-36.41054215962362),(-31.664003804723883,-35.465861593346204),(-35.44272606983352,-36.77782883499695),(-35.77071788024622,-35.83314826871953),(-34.82603731396881,-35.50515645830686),(-35.15402912438149,-34.560475892029444),(-30.430626292994432,-32.92051683996597),(-30.75861810340714,-31.97583627368857),(-35.48202093479416,-33.61579532575202),(-35.81001274520685,-32.67111475947459),(-36.75469331148428,-32.999106569887296),(-37.41067693230965,-31.109745437332474),(-32.68727410092261,-29.469786385269035),(-33.01526591133527,-28.525105818991634),(-34.90462704389011,-29.181089439817),(-35.2326188543028,-28.236408873539578),(-24.841132625251333,-24.62849895899996),(-23.201173573187823,-29.35190179038694),(-22.256493006910443,-29.02390997997433),(-23.89645205897392,-24.300507148587293),(-22.951771492696484,-23.972515338174592),(-15.079968042792068,-46.64484892883267),(-12.245926343959809,-45.66087349759454),(-20.117729793864143,-22.988539906936694),(-18.228368661309418,-22.332556286111213),(-18.556360471722044,-21.38787571983392),(-11.943596507780192,-19.09193304694503),(-12.271588318192844,-18.147252480667674),(-18.88435228213486,-20.44319515355636),(-19.212344092547482,-19.498514587278972),(-36.216594285540864,-25.402367174707344),(-36.87257790636629,-23.51300604215253),(-38.76193903892105,-24.16898966297792),(-38.4339472285084,-25.113670229255327),(-41.2679889273406,-26.09764566049345),(-43.235939789816804,-20.429562262828945),(-44.18062035609423,-20.75755407324167),(-42.212669493618044,-26.425637470906143),(-43.15735005989545,-26.753629281318798),(-42.829358249482766,-27.69830984759621),(-38.10595541809573,-26.058350795532718),(-36.79398817644493,-29.83707306064238),(-37.73866874272233,-30.16506487105507),(-38.06666055313502,-29.220384304777653),(-39.01134111941243,-29.548376115190344),(-38.683349308999745,-30.49305668146775),(-39.62802987527715,-30.82104849188045),(-40.61200530651524,-27.98700679304822),(-41.55668587279264,-28.314998603460914),(-41.228694062379944,-29.25967916973833),(-43.11805519493479,-29.91566279056373),(-43.77403881576018,-28.026301658008908),(-44.71871938203757,-28.354293468421645),(-44.06273576121221,-30.243654600976416),(-45.007416327489594,-30.57164641138911),(-44.6794245170769,-31.516326977666534),(-40.90070225196726,-30.204359736015732),(-40.57271044155456,-31.149040302293134),(-41.51739100783198,-31.47703211270584),(-41.18939919741929,-32.42171267898323),(-38.35535749858705,-31.437737247745158),(-37.69937387776167,-33.3270983803)],[(-0.7312595985485247,-47.510644407947034),(0.09086618877586616,-46.94133852371936),(4.07600737836958,-52.69621903499007),(4.898133165693991,-52.12691315076237),(2.620909628783279,-48.83841000146484),(14.130670651324683,-40.86812762227729),(12.99205888286933,-39.22387604762851),(1.482297860327928,-47.19415842681608),(0.9129919761002424,-46.37203263949168),(1.735117763424633,-45.80272675526399),(1.165811879196955,-44.980600967939615),(6.098566603143284,-41.56476566257355),(5.529260718915637,-40.74263987524919),(0.5965059949692911,-44.15847518061524),(0.02720011074159412,-43.336349393290845),(-0.7949256765827536,-43.90565527751852),(-3.072149213493488,-40.61715212822097),(1.8606055104528476,-37.2013168228549),(1.2912996262251712,-36.37919103553054),(-3.641455097721114,-39.79502634089658),(-4.21076098194882,-38.972900553572195),(1.5441195293218644,-34.987759363978455),(0.9748136450941892,-34.16563357665408),(0.15268785776978622,-34.73493946088175),(-2.1245356791409202,-31.4464363115842),(-2.946661466465294,-32.01574219581187),(-0.6694379295545827,-35.304245345109436),(-2.31368950420338,-36.44285711356478),(-6.298830693797034,-30.68797660229406),(-7.120956481121474,-31.257282486521753),(-3.135815291527709,-37.01216299779245),(-4.7800668661764965,-38.15077476624783),(-5.349372750404177,-37.328648978923425),(-6.171498537728547,-37.89795486315108),(-1.6170514639071518,-44.47496116174619),(-2.439177251231527,-45.044267045973854)]]

start = (31.925867335988087,-19.09974659978289)
goal = (-0.3377741251788464,-0.941992890867283)
rand = (-90,70)

rrtpath(obstacleList,start,goal,rand) # rrt  returns smoothie path
#rrtpath(obstacleList,gaol,start,rand)
drawPolygons(obstacleList) # draw map
#drawPolygonsNoFill(obstacleList)
plt.axis('scaled')
plt.grid(True)
plt.pause(0.01)  # Need for Mac
plt.show()
